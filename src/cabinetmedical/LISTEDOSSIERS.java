/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cabinetmedical;

import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author anis
 */
public class LISTEDOSSIERS extends javax.swing.JFrame {
   ArrayList<DossierMedical> dossiers = new ArrayList<>();
   private static LISTEDOSSIERS instance;
    /**
     * Creates new form LISTEDOSSIERS
     * @return 
     */
   
   public static LISTEDOSSIERS getInstance() {
        if (instance == null) {
            instance = new LISTEDOSSIERS();
        }
        return instance;
    }
    public LISTEDOSSIERS() {
        initComponents();
        readAllData();
        WriteAllData();
    }
void SaveAllData(){
        try{
            FileWriter fileWriter = new FileWriter("datadossier.txt");
            for (int i=0;i<dossiers.size();i++){
                fileWriter.write(dossiers.get(i).get_num_dossier()+";"+dossiers.get(i).patient.get_nom()+";"+dossiers.get(i).get_traitements()+";"+dossiers.get(i).get_traitements()+";"+dossiers.get(i).get_diagnostic()+";"+dossiers.get(i).prescription.getMedicament()+";"+dossiers.get(i).prescription.getPosologie()+";"+dossiers.get(i).prescription.getTypeExamen()+";"+dossiers.get(i).prescription.getInstructions()+"\n");

            }fileWriter.close();
        }catch (Exception e){}
        
}
void WriteAllData() {
    dp.setText(""); // Efface le contenu actuel de la zone de texte

    // Parcourt tous les patients et les affiche avec une mise en forme adaptée
    for (int i = 0; i < dossiers.size(); i++) {
        DossierMedical d = dossiers.get(i);
        dp.append("╔════════════════════════════════════════╗\n");
        dp.append("║ NUMERO DU DOSSIER: " + d.get_num_dossier() + "\n");
        dp.append("║ PATIENT: " + d.patient.get_nom() + d.patient.get_prenom()+"\n");
        dp.append("║ TRAITEMENTS: " + d.get_traitements() + "\n");
        dp.append("║ DIAGNOSTIC: " + d.get_diagnostic() + "\n");
        dp.append("║ PRESCRIPTION:MEDICAMENT. " + d.prescription.getMedicament() + "\n");
        dp.append("║ POSOLOGIE: " + d.prescription.getPosologie() + "\n");
        dp.append("║ TYPE D'EXAMEN: " + d.prescription.getTypeExamen() + "\n");
        dp.append("║ INSTRUCTIONS: " + d.prescription.getInstructions() + "\n");
        dp.append("╚════════════════════════════════════════╝\n\n");
    }
}
void readAllData(){
    try{
        File pfile = new File("datadossier.txt");
        Scanner scanner = new Scanner(pfile);
        while(scanner.hasNextLine()){
            String data = scanner.nextLine();
            String[] curData = data.split(";");
            DossierMedical d = new DossierMedical();
            d.set_num_dossier(Integer.parseInt(curData[0]));
            d.patient.set_nom(curData[1]);
            d.set_traitements(curData[2]);
            d.set_diagnostic(curData[3]);
            d.prescription.setMedicament(curData[4]);
            d.prescription.setPosologie(curData[5]);
            d.prescription.setTypeExamen(curData[6]);
            d.prescription.setInstructions(curData[7]);
            dossiers.add(d);
        }
        scanner.close();
        
        // Après avoir lu les données, mettez à jour l'affichage
        WriteAllData();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
   public void adddossier(DossierMedical d) {
        dossiers.add(d);
        // Mettre à jour l'affichage de la liste des patients
        WriteAllData();
        SaveAllData();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dp = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        dp.setColumns(20);
        dp.setRows(5);
        jScrollPane2.setViewportView(dp);

        jPanel3.setBackground(new java.awt.Color(0, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("liste de dossiers medicaux");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(253, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LISTEDOSSIERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LISTEDOSSIERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LISTEDOSSIERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LISTEDOSSIERS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LISTEDOSSIERS listedossiers = LISTEDOSSIERS.getInstance();
                listedossiers.setVisible(true);
                listedossiers.WriteAllData(); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea dp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
